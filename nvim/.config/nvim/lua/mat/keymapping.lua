local function map(mode, lhs, rhs, opts)
  vim.keymap.set(mode, lhs, rhs, opts)
end

-- map('n', '<C-s>', ':w<CR>', {silent = true})
map('n', '<Leader>h', '<cmd>UndotreeToggle<cr>', {})
map('n', '<C-e>', require("harpoon.ui").toggle_quick_menu, {silent = true})
map('n', 'Q', '<nop>', {silent = true, noremap = true})
map('n', '<Leader>a', require("harpoon.mark").add_file, {silent = true, desc = "Add file to Harpoon"})
map('n', '<Leader>ff', '<cmd>Telescope find_files <CR>', {})
map('n', '<Leader>fe', '<cmd>Telescope file_browser<CR>', {})
map('n', '<Leader>fg', '<cmd>Telescope live_grep<CR>', {})
map('n', '<Leader>fb', '<cmd>Telescope buffers<CR>', {})
map('n', '<Leader>si', ':e ~/.config/nvim/init.lua<CR>', {silent=true})
map('n', '<Leader>sp', ':e ~/.config/nvim/lua/mat/lazy.lua<CR>', {silent=true})
map('n', '<Leader>sk', ':e ~/.config/nvim/lua/mat/keymapping.lua<CR>', {silent=true})
map('n', '<Leader>so', ':e ~/.config/nvim/lua/mat/options.lua<CR>', {silent=true})
map('n', '<Leader>st', ':lua require("telescope.builtin").colorscheme({})<CR>', {silent=true})
map('n', '<Leader>tn', ':call RunNearestSpec()<CR>', {silent=true, desc = "Run current test"})
map('n', '<Leader>tf', ':call RunCurrentSpecFile()<CR>', {silent=true, desc = "Run entire test file"})
map('n', '<Leader>cl', require("mat.utils").clear_comments, {silent=true})
map('v', '<Leader>p', '"_dP', {silent=true})
map('n', '<Leader>1', function() require("harpoon.ui").nav_file(1) end, {silent=true, desc = "Go to file 1 (Harpoon)"})
map('n', '<Leader>2', function() require("harpoon.ui").nav_file(2) end, {silent=true, desc = "Go to file 2 (Harpoon)"})
map('n', '<Leader>3', function() require("harpoon.ui").nav_file(3) end, {silent=true, desc = "Go to file 3 (Harpoon)"})
map('n', '<Leader>4', function() require("harpoon.ui").nav_file(4) end, {silent=true, desc = "Go to file 4 (Harpoon)"})
map('n', '<Leader>5', function() require("harpoon.ui").nav_file(5) end, {silent=true, desc = "Go to file 5 (Harpoon)"})
map('n', '<Leader>6', function() require("harpoon.ui").nav_file(6) end, {silent=true, desc = "Go to file 6 (Harpoon)"})
map('n', '<C-TAB>', 'gT', {silent=true})
map('n', '<S-TAB>', 'gt', {silent=true})
-- map('n', '.t', '<Plug>PlenaryTestFile', {silent = true})
map('n', 'ss', 'ggVG', {})
map('n', '+', '<C-a>', {silent=true})
map('n', '-', '<C-x>', {silent=true})
map('n', '<Leader>zi', '<C-w>_<bar><C-w>|', {silent=true})
map('n', '<Leader>zo', '<C-w>=', {silent=true})
map('n', 'ga', '<Plug>(EasyAlign)', {silent = true})
map('n', '<F1>', function() require('dap').toggle_breakpoint() end, {silent = true})
map('n', '<F5>', function() require('dap').continue() end, {silent = true})
map('n', '<F6>', function() require('dap').step_over() end, {silent = true})
map('n', '<F3>', function() require('dap').step_into() end, {silent = true})
map('n', '<F4>', function()
  vim.diagnostic.config({ virtual_text = not vim.g.diagnostic_enabled })
  vim.g.diagnostic_enabled = not vim.g.diagnostic_enabled
  require('dapui').toggle()
end, {silent = true})
